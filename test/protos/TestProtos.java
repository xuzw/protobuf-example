// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TestProtos.proto

package test.protos;

public final class TestProtos {
  private TestProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code test.protos.Type}
   *
   * <pre>
   * 类型
   * </pre>
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADD = 1;</code>
     *
     * <pre>
     * 新增
     * </pre>
     */
    ADD(0, 1),
    /**
     * <code>UPDATE = 2;</code>
     *
     * <pre>
     * 更新
     * </pre>
     */
    UPDATE(1, 2),
    /**
     * <code>DELETE = 3;</code>
     *
     * <pre>
     * 删除
     * </pre>
     */
    DELETE(2, 3),
    ;

    /**
     * <code>ADD = 1;</code>
     *
     * <pre>
     * 新增
     * </pre>
     */
    public static final int ADD_VALUE = 1;
    /**
     * <code>UPDATE = 2;</code>
     *
     * <pre>
     * 更新
     * </pre>
     */
    public static final int UPDATE_VALUE = 2;
    /**
     * <code>DELETE = 3;</code>
     *
     * <pre>
     * 删除
     * </pre>
     */
    public static final int DELETE_VALUE = 3;


    public final int getNumber() { return value; }

    public static Type valueOf(int value) {
      switch (value) {
        case 1: return ADD;
        case 2: return UPDATE;
        case 3: return DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return test.protos.TestProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Type(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:test.protos.Type)
  }

  public interface HelloWorldMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 必填的Id（数字）
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 必填的Id（数字）
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code test.protos.HelloWorldMessage}
   *
   * <pre>
   * 测试消息
   * </pre>
   */
  public static final class HelloWorldMessage extends
      com.google.protobuf.GeneratedMessage
      implements HelloWorldMessageOrBuilder {
    // Use HelloWorldMessage.newBuilder() to construct.
    private HelloWorldMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HelloWorldMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HelloWorldMessage defaultInstance;
    public static HelloWorldMessage getDefaultInstance() {
      return defaultInstance;
    }

    public HelloWorldMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HelloWorldMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return test.protos.TestProtos.internal_static_test_protos_HelloWorldMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return test.protos.TestProtos.internal_static_test_protos_HelloWorldMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              test.protos.TestProtos.HelloWorldMessage.class, test.protos.TestProtos.HelloWorldMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<HelloWorldMessage> PARSER =
        new com.google.protobuf.AbstractParser<HelloWorldMessage>() {
      public HelloWorldMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HelloWorldMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HelloWorldMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 必填的Id（数字）
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 必填的Id（数字）
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static test.protos.TestProtos.HelloWorldMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static test.protos.TestProtos.HelloWorldMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(test.protos.TestProtos.HelloWorldMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code test.protos.HelloWorldMessage}
     *
     * <pre>
     * 测试消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements test.protos.TestProtos.HelloWorldMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return test.protos.TestProtos.internal_static_test_protos_HelloWorldMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return test.protos.TestProtos.internal_static_test_protos_HelloWorldMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                test.protos.TestProtos.HelloWorldMessage.class, test.protos.TestProtos.HelloWorldMessage.Builder.class);
      }

      // Construct using test.protos.TestProtos.HelloWorldMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return test.protos.TestProtos.internal_static_test_protos_HelloWorldMessage_descriptor;
      }

      public test.protos.TestProtos.HelloWorldMessage getDefaultInstanceForType() {
        return test.protos.TestProtos.HelloWorldMessage.getDefaultInstance();
      }

      public test.protos.TestProtos.HelloWorldMessage build() {
        test.protos.TestProtos.HelloWorldMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public test.protos.TestProtos.HelloWorldMessage buildPartial() {
        test.protos.TestProtos.HelloWorldMessage result = new test.protos.TestProtos.HelloWorldMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof test.protos.TestProtos.HelloWorldMessage) {
          return mergeFrom((test.protos.TestProtos.HelloWorldMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(test.protos.TestProtos.HelloWorldMessage other) {
        if (other == test.protos.TestProtos.HelloWorldMessage.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        test.protos.TestProtos.HelloWorldMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (test.protos.TestProtos.HelloWorldMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 必填的Id（数字）
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 必填的Id（数字）
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 必填的Id（数字）
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 必填的Id（数字）
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:test.protos.HelloWorldMessage)
    }

    static {
      defaultInstance = new HelloWorldMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:test.protos.HelloWorldMessage)
  }

  public interface SimpleMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 选填的Id（数字）
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 选填的Id（数字）
     * </pre>
     */
    int getId();

    // optional bool flag = 2;
    /**
     * <code>optional bool flag = 2;</code>
     *
     * <pre>
     * 选填的标记（布尔）
     * </pre>
     */
    boolean hasFlag();
    /**
     * <code>optional bool flag = 2;</code>
     *
     * <pre>
     * 选填的标记（布尔）
     * </pre>
     */
    boolean getFlag();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     * 选填的名字（字符串：只能处理 ASCII字符）
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     * 选填的名字（字符串：只能处理 ASCII字符）
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     * 选填的名字（字符串：只能处理 ASCII字符）
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // repeated bytes alias = 4;
    /**
     * <code>repeated bytes alias = 4;</code>
     *
     * <pre>
     * 选填的、可重复的别名（字符串：可包含中文）
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getAliasList();
    /**
     * <code>repeated bytes alias = 4;</code>
     *
     * <pre>
     * 选填的、可重复的别名（字符串：可包含中文）
     * </pre>
     */
    int getAliasCount();
    /**
     * <code>repeated bytes alias = 4;</code>
     *
     * <pre>
     * 选填的、可重复的别名（字符串：可包含中文）
     * </pre>
     */
    com.google.protobuf.ByteString getAlias(int index);
  }
  /**
   * Protobuf type {@code test.protos.SimpleMessage}
   *
   * <pre>
   * 简单消息
   * </pre>
   */
  public static final class SimpleMessage extends
      com.google.protobuf.GeneratedMessage
      implements SimpleMessageOrBuilder {
    // Use SimpleMessage.newBuilder() to construct.
    private SimpleMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SimpleMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SimpleMessage defaultInstance;
    public static SimpleMessage getDefaultInstance() {
      return defaultInstance;
    }

    public SimpleMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              flag_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                alias_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000008;
              }
              alias_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          alias_ = java.util.Collections.unmodifiableList(alias_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return test.protos.TestProtos.internal_static_test_protos_SimpleMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return test.protos.TestProtos.internal_static_test_protos_SimpleMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              test.protos.TestProtos.SimpleMessage.class, test.protos.TestProtos.SimpleMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<SimpleMessage> PARSER =
        new com.google.protobuf.AbstractParser<SimpleMessage>() {
      public SimpleMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 选填的Id（数字）
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 选填的Id（数字）
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional bool flag = 2;
    public static final int FLAG_FIELD_NUMBER = 2;
    private boolean flag_;
    /**
     * <code>optional bool flag = 2;</code>
     *
     * <pre>
     * 选填的标记（布尔）
     * </pre>
     */
    public boolean hasFlag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool flag = 2;</code>
     *
     * <pre>
     * 选填的标记（布尔）
     * </pre>
     */
    public boolean getFlag() {
      return flag_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     * 选填的名字（字符串：只能处理 ASCII字符）
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     * 选填的名字（字符串：只能处理 ASCII字符）
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     * 选填的名字（字符串：只能处理 ASCII字符）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated bytes alias = 4;
    public static final int ALIAS_FIELD_NUMBER = 4;
    private java.util.List<com.google.protobuf.ByteString> alias_;
    /**
     * <code>repeated bytes alias = 4;</code>
     *
     * <pre>
     * 选填的、可重复的别名（字符串：可包含中文）
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getAliasList() {
      return alias_;
    }
    /**
     * <code>repeated bytes alias = 4;</code>
     *
     * <pre>
     * 选填的、可重复的别名（字符串：可包含中文）
     * </pre>
     */
    public int getAliasCount() {
      return alias_.size();
    }
    /**
     * <code>repeated bytes alias = 4;</code>
     *
     * <pre>
     * 选填的、可重复的别名（字符串：可包含中文）
     * </pre>
     */
    public com.google.protobuf.ByteString getAlias(int index) {
      return alias_.get(index);
    }

    private void initFields() {
      id_ = 0;
      flag_ = false;
      name_ = "";
      alias_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, flag_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      for (int i = 0; i < alias_.size(); i++) {
        output.writeBytes(4, alias_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, flag_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < alias_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(alias_.get(i));
        }
        size += dataSize;
        size += 1 * getAliasList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static test.protos.TestProtos.SimpleMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.protos.TestProtos.SimpleMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.protos.TestProtos.SimpleMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.protos.TestProtos.SimpleMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.protos.TestProtos.SimpleMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static test.protos.TestProtos.SimpleMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static test.protos.TestProtos.SimpleMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static test.protos.TestProtos.SimpleMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static test.protos.TestProtos.SimpleMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static test.protos.TestProtos.SimpleMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(test.protos.TestProtos.SimpleMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code test.protos.SimpleMessage}
     *
     * <pre>
     * 简单消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements test.protos.TestProtos.SimpleMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return test.protos.TestProtos.internal_static_test_protos_SimpleMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return test.protos.TestProtos.internal_static_test_protos_SimpleMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                test.protos.TestProtos.SimpleMessage.class, test.protos.TestProtos.SimpleMessage.Builder.class);
      }

      // Construct using test.protos.TestProtos.SimpleMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        flag_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        alias_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return test.protos.TestProtos.internal_static_test_protos_SimpleMessage_descriptor;
      }

      public test.protos.TestProtos.SimpleMessage getDefaultInstanceForType() {
        return test.protos.TestProtos.SimpleMessage.getDefaultInstance();
      }

      public test.protos.TestProtos.SimpleMessage build() {
        test.protos.TestProtos.SimpleMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public test.protos.TestProtos.SimpleMessage buildPartial() {
        test.protos.TestProtos.SimpleMessage result = new test.protos.TestProtos.SimpleMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.flag_ = flag_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          alias_ = java.util.Collections.unmodifiableList(alias_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.alias_ = alias_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof test.protos.TestProtos.SimpleMessage) {
          return mergeFrom((test.protos.TestProtos.SimpleMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(test.protos.TestProtos.SimpleMessage other) {
        if (other == test.protos.TestProtos.SimpleMessage.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasFlag()) {
          setFlag(other.getFlag());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          onChanged();
        }
        if (!other.alias_.isEmpty()) {
          if (alias_.isEmpty()) {
            alias_ = other.alias_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAliasIsMutable();
            alias_.addAll(other.alias_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        test.protos.TestProtos.SimpleMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (test.protos.TestProtos.SimpleMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 选填的Id（数字）
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 选填的Id（数字）
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 选填的Id（数字）
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 选填的Id（数字）
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional bool flag = 2;
      private boolean flag_ ;
      /**
       * <code>optional bool flag = 2;</code>
       *
       * <pre>
       * 选填的标记（布尔）
       * </pre>
       */
      public boolean hasFlag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool flag = 2;</code>
       *
       * <pre>
       * 选填的标记（布尔）
       * </pre>
       */
      public boolean getFlag() {
        return flag_;
      }
      /**
       * <code>optional bool flag = 2;</code>
       *
       * <pre>
       * 选填的标记（布尔）
       * </pre>
       */
      public Builder setFlag(boolean value) {
        bitField0_ |= 0x00000002;
        flag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool flag = 2;</code>
       *
       * <pre>
       * 选填的标记（布尔）
       * </pre>
       */
      public Builder clearFlag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        flag_ = false;
        onChanged();
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       * 选填的名字（字符串：只能处理 ASCII字符）
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       * 选填的名字（字符串：只能处理 ASCII字符）
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       * 选填的名字（字符串：只能处理 ASCII字符）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       * 选填的名字（字符串：只能处理 ASCII字符）
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       * 选填的名字（字符串：只能处理 ASCII字符）
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       * 选填的名字（字符串：只能处理 ASCII字符）
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }

      // repeated bytes alias = 4;
      private java.util.List<com.google.protobuf.ByteString> alias_ = java.util.Collections.emptyList();
      private void ensureAliasIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          alias_ = new java.util.ArrayList<com.google.protobuf.ByteString>(alias_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated bytes alias = 4;</code>
       *
       * <pre>
       * 选填的、可重复的别名（字符串：可包含中文）
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getAliasList() {
        return java.util.Collections.unmodifiableList(alias_);
      }
      /**
       * <code>repeated bytes alias = 4;</code>
       *
       * <pre>
       * 选填的、可重复的别名（字符串：可包含中文）
       * </pre>
       */
      public int getAliasCount() {
        return alias_.size();
      }
      /**
       * <code>repeated bytes alias = 4;</code>
       *
       * <pre>
       * 选填的、可重复的别名（字符串：可包含中文）
       * </pre>
       */
      public com.google.protobuf.ByteString getAlias(int index) {
        return alias_.get(index);
      }
      /**
       * <code>repeated bytes alias = 4;</code>
       *
       * <pre>
       * 选填的、可重复的别名（字符串：可包含中文）
       * </pre>
       */
      public Builder setAlias(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAliasIsMutable();
        alias_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes alias = 4;</code>
       *
       * <pre>
       * 选填的、可重复的别名（字符串：可包含中文）
       * </pre>
       */
      public Builder addAlias(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAliasIsMutable();
        alias_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes alias = 4;</code>
       *
       * <pre>
       * 选填的、可重复的别名（字符串：可包含中文）
       * </pre>
       */
      public Builder addAllAlias(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureAliasIsMutable();
        super.addAll(values, alias_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes alias = 4;</code>
       *
       * <pre>
       * 选填的、可重复的别名（字符串：可包含中文）
       * </pre>
       */
      public Builder clearAlias() {
        alias_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:test.protos.SimpleMessage)
    }

    static {
      defaultInstance = new SimpleMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:test.protos.SimpleMessage)
  }

  public interface ComplexMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 选填的Id（数字）
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 选填的Id（数字）
     * </pre>
     */
    int getId();

    // optional .test.protos.Type type = 7;
    /**
     * <code>optional .test.protos.Type type = 7;</code>
     *
     * <pre>
     * 选填的类型（Type枚举）
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .test.protos.Type type = 7;</code>
     *
     * <pre>
     * 选填的类型（Type枚举）
     * </pre>
     */
    test.protos.TestProtos.Type getType();

    // optional .test.protos.HelloWorldMessage helloWorldMessage = 2;
    /**
     * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
     *
     * <pre>
     * 选填的、嵌套的测试消息
     * </pre>
     */
    boolean hasHelloWorldMessage();
    /**
     * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
     *
     * <pre>
     * 选填的、嵌套的测试消息
     * </pre>
     */
    test.protos.TestProtos.HelloWorldMessage getHelloWorldMessage();
    /**
     * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
     *
     * <pre>
     * 选填的、嵌套的测试消息
     * </pre>
     */
    test.protos.TestProtos.HelloWorldMessageOrBuilder getHelloWorldMessageOrBuilder();

    // repeated .test.protos.SimpleMessage simpleMessage = 3;
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    java.util.List<test.protos.TestProtos.SimpleMessage> 
        getSimpleMessageList();
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    test.protos.TestProtos.SimpleMessage getSimpleMessage(int index);
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    int getSimpleMessageCount();
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    java.util.List<? extends test.protos.TestProtos.SimpleMessageOrBuilder> 
        getSimpleMessageOrBuilderList();
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    test.protos.TestProtos.SimpleMessageOrBuilder getSimpleMessageOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code test.protos.ComplexMessage}
   *
   * <pre>
   * 复杂消息
   * </pre>
   */
  public static final class ComplexMessage extends
      com.google.protobuf.GeneratedMessage
      implements ComplexMessageOrBuilder {
    // Use ComplexMessage.newBuilder() to construct.
    private ComplexMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ComplexMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ComplexMessage defaultInstance;
    public static ComplexMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ComplexMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ComplexMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              test.protos.TestProtos.HelloWorldMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = helloWorldMessage_.toBuilder();
              }
              helloWorldMessage_ = input.readMessage(test.protos.TestProtos.HelloWorldMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(helloWorldMessage_);
                helloWorldMessage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                simpleMessage_ = new java.util.ArrayList<test.protos.TestProtos.SimpleMessage>();
                mutable_bitField0_ |= 0x00000008;
              }
              simpleMessage_.add(input.readMessage(test.protos.TestProtos.SimpleMessage.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              test.protos.TestProtos.Type value = test.protos.TestProtos.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          simpleMessage_ = java.util.Collections.unmodifiableList(simpleMessage_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return test.protos.TestProtos.internal_static_test_protos_ComplexMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return test.protos.TestProtos.internal_static_test_protos_ComplexMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              test.protos.TestProtos.ComplexMessage.class, test.protos.TestProtos.ComplexMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ComplexMessage> PARSER =
        new com.google.protobuf.AbstractParser<ComplexMessage>() {
      public ComplexMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ComplexMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ComplexMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 选填的Id（数字）
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 选填的Id（数字）
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional .test.protos.Type type = 7;
    public static final int TYPE_FIELD_NUMBER = 7;
    private test.protos.TestProtos.Type type_;
    /**
     * <code>optional .test.protos.Type type = 7;</code>
     *
     * <pre>
     * 选填的类型（Type枚举）
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .test.protos.Type type = 7;</code>
     *
     * <pre>
     * 选填的类型（Type枚举）
     * </pre>
     */
    public test.protos.TestProtos.Type getType() {
      return type_;
    }

    // optional .test.protos.HelloWorldMessage helloWorldMessage = 2;
    public static final int HELLOWORLDMESSAGE_FIELD_NUMBER = 2;
    private test.protos.TestProtos.HelloWorldMessage helloWorldMessage_;
    /**
     * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
     *
     * <pre>
     * 选填的、嵌套的测试消息
     * </pre>
     */
    public boolean hasHelloWorldMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
     *
     * <pre>
     * 选填的、嵌套的测试消息
     * </pre>
     */
    public test.protos.TestProtos.HelloWorldMessage getHelloWorldMessage() {
      return helloWorldMessage_;
    }
    /**
     * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
     *
     * <pre>
     * 选填的、嵌套的测试消息
     * </pre>
     */
    public test.protos.TestProtos.HelloWorldMessageOrBuilder getHelloWorldMessageOrBuilder() {
      return helloWorldMessage_;
    }

    // repeated .test.protos.SimpleMessage simpleMessage = 3;
    public static final int SIMPLEMESSAGE_FIELD_NUMBER = 3;
    private java.util.List<test.protos.TestProtos.SimpleMessage> simpleMessage_;
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    public java.util.List<test.protos.TestProtos.SimpleMessage> getSimpleMessageList() {
      return simpleMessage_;
    }
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    public java.util.List<? extends test.protos.TestProtos.SimpleMessageOrBuilder> 
        getSimpleMessageOrBuilderList() {
      return simpleMessage_;
    }
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    public int getSimpleMessageCount() {
      return simpleMessage_.size();
    }
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    public test.protos.TestProtos.SimpleMessage getSimpleMessage(int index) {
      return simpleMessage_.get(index);
    }
    /**
     * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
     *
     * <pre>
     * 选填的、可重复的、嵌套的简单消息
     * </pre>
     */
    public test.protos.TestProtos.SimpleMessageOrBuilder getSimpleMessageOrBuilder(
        int index) {
      return simpleMessage_.get(index);
    }

    private void initFields() {
      id_ = 0;
      type_ = test.protos.TestProtos.Type.ADD;
      helloWorldMessage_ = test.protos.TestProtos.HelloWorldMessage.getDefaultInstance();
      simpleMessage_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasHelloWorldMessage()) {
        if (!getHelloWorldMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(2, helloWorldMessage_);
      }
      for (int i = 0; i < simpleMessage_.size(); i++) {
        output.writeMessage(3, simpleMessage_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(7, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, helloWorldMessage_);
      }
      for (int i = 0; i < simpleMessage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, simpleMessage_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static test.protos.TestProtos.ComplexMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.protos.TestProtos.ComplexMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.protos.TestProtos.ComplexMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.protos.TestProtos.ComplexMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.protos.TestProtos.ComplexMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static test.protos.TestProtos.ComplexMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static test.protos.TestProtos.ComplexMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static test.protos.TestProtos.ComplexMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static test.protos.TestProtos.ComplexMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static test.protos.TestProtos.ComplexMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(test.protos.TestProtos.ComplexMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code test.protos.ComplexMessage}
     *
     * <pre>
     * 复杂消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements test.protos.TestProtos.ComplexMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return test.protos.TestProtos.internal_static_test_protos_ComplexMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return test.protos.TestProtos.internal_static_test_protos_ComplexMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                test.protos.TestProtos.ComplexMessage.class, test.protos.TestProtos.ComplexMessage.Builder.class);
      }

      // Construct using test.protos.TestProtos.ComplexMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHelloWorldMessageFieldBuilder();
          getSimpleMessageFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = test.protos.TestProtos.Type.ADD;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (helloWorldMessageBuilder_ == null) {
          helloWorldMessage_ = test.protos.TestProtos.HelloWorldMessage.getDefaultInstance();
        } else {
          helloWorldMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (simpleMessageBuilder_ == null) {
          simpleMessage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          simpleMessageBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return test.protos.TestProtos.internal_static_test_protos_ComplexMessage_descriptor;
      }

      public test.protos.TestProtos.ComplexMessage getDefaultInstanceForType() {
        return test.protos.TestProtos.ComplexMessage.getDefaultInstance();
      }

      public test.protos.TestProtos.ComplexMessage build() {
        test.protos.TestProtos.ComplexMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public test.protos.TestProtos.ComplexMessage buildPartial() {
        test.protos.TestProtos.ComplexMessage result = new test.protos.TestProtos.ComplexMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (helloWorldMessageBuilder_ == null) {
          result.helloWorldMessage_ = helloWorldMessage_;
        } else {
          result.helloWorldMessage_ = helloWorldMessageBuilder_.build();
        }
        if (simpleMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            simpleMessage_ = java.util.Collections.unmodifiableList(simpleMessage_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.simpleMessage_ = simpleMessage_;
        } else {
          result.simpleMessage_ = simpleMessageBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof test.protos.TestProtos.ComplexMessage) {
          return mergeFrom((test.protos.TestProtos.ComplexMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(test.protos.TestProtos.ComplexMessage other) {
        if (other == test.protos.TestProtos.ComplexMessage.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasHelloWorldMessage()) {
          mergeHelloWorldMessage(other.getHelloWorldMessage());
        }
        if (simpleMessageBuilder_ == null) {
          if (!other.simpleMessage_.isEmpty()) {
            if (simpleMessage_.isEmpty()) {
              simpleMessage_ = other.simpleMessage_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSimpleMessageIsMutable();
              simpleMessage_.addAll(other.simpleMessage_);
            }
            onChanged();
          }
        } else {
          if (!other.simpleMessage_.isEmpty()) {
            if (simpleMessageBuilder_.isEmpty()) {
              simpleMessageBuilder_.dispose();
              simpleMessageBuilder_ = null;
              simpleMessage_ = other.simpleMessage_;
              bitField0_ = (bitField0_ & ~0x00000008);
              simpleMessageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSimpleMessageFieldBuilder() : null;
            } else {
              simpleMessageBuilder_.addAllMessages(other.simpleMessage_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasHelloWorldMessage()) {
          if (!getHelloWorldMessage().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        test.protos.TestProtos.ComplexMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (test.protos.TestProtos.ComplexMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 选填的Id（数字）
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 选填的Id（数字）
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 选填的Id（数字）
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 选填的Id（数字）
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional .test.protos.Type type = 7;
      private test.protos.TestProtos.Type type_ = test.protos.TestProtos.Type.ADD;
      /**
       * <code>optional .test.protos.Type type = 7;</code>
       *
       * <pre>
       * 选填的类型（Type枚举）
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .test.protos.Type type = 7;</code>
       *
       * <pre>
       * 选填的类型（Type枚举）
       * </pre>
       */
      public test.protos.TestProtos.Type getType() {
        return type_;
      }
      /**
       * <code>optional .test.protos.Type type = 7;</code>
       *
       * <pre>
       * 选填的类型（Type枚举）
       * </pre>
       */
      public Builder setType(test.protos.TestProtos.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .test.protos.Type type = 7;</code>
       *
       * <pre>
       * 选填的类型（Type枚举）
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = test.protos.TestProtos.Type.ADD;
        onChanged();
        return this;
      }

      // optional .test.protos.HelloWorldMessage helloWorldMessage = 2;
      private test.protos.TestProtos.HelloWorldMessage helloWorldMessage_ = test.protos.TestProtos.HelloWorldMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          test.protos.TestProtos.HelloWorldMessage, test.protos.TestProtos.HelloWorldMessage.Builder, test.protos.TestProtos.HelloWorldMessageOrBuilder> helloWorldMessageBuilder_;
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      public boolean hasHelloWorldMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      public test.protos.TestProtos.HelloWorldMessage getHelloWorldMessage() {
        if (helloWorldMessageBuilder_ == null) {
          return helloWorldMessage_;
        } else {
          return helloWorldMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      public Builder setHelloWorldMessage(test.protos.TestProtos.HelloWorldMessage value) {
        if (helloWorldMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          helloWorldMessage_ = value;
          onChanged();
        } else {
          helloWorldMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      public Builder setHelloWorldMessage(
          test.protos.TestProtos.HelloWorldMessage.Builder builderForValue) {
        if (helloWorldMessageBuilder_ == null) {
          helloWorldMessage_ = builderForValue.build();
          onChanged();
        } else {
          helloWorldMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      public Builder mergeHelloWorldMessage(test.protos.TestProtos.HelloWorldMessage value) {
        if (helloWorldMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              helloWorldMessage_ != test.protos.TestProtos.HelloWorldMessage.getDefaultInstance()) {
            helloWorldMessage_ =
              test.protos.TestProtos.HelloWorldMessage.newBuilder(helloWorldMessage_).mergeFrom(value).buildPartial();
          } else {
            helloWorldMessage_ = value;
          }
          onChanged();
        } else {
          helloWorldMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      public Builder clearHelloWorldMessage() {
        if (helloWorldMessageBuilder_ == null) {
          helloWorldMessage_ = test.protos.TestProtos.HelloWorldMessage.getDefaultInstance();
          onChanged();
        } else {
          helloWorldMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      public test.protos.TestProtos.HelloWorldMessage.Builder getHelloWorldMessageBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHelloWorldMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      public test.protos.TestProtos.HelloWorldMessageOrBuilder getHelloWorldMessageOrBuilder() {
        if (helloWorldMessageBuilder_ != null) {
          return helloWorldMessageBuilder_.getMessageOrBuilder();
        } else {
          return helloWorldMessage_;
        }
      }
      /**
       * <code>optional .test.protos.HelloWorldMessage helloWorldMessage = 2;</code>
       *
       * <pre>
       * 选填的、嵌套的测试消息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          test.protos.TestProtos.HelloWorldMessage, test.protos.TestProtos.HelloWorldMessage.Builder, test.protos.TestProtos.HelloWorldMessageOrBuilder> 
          getHelloWorldMessageFieldBuilder() {
        if (helloWorldMessageBuilder_ == null) {
          helloWorldMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              test.protos.TestProtos.HelloWorldMessage, test.protos.TestProtos.HelloWorldMessage.Builder, test.protos.TestProtos.HelloWorldMessageOrBuilder>(
                  helloWorldMessage_,
                  getParentForChildren(),
                  isClean());
          helloWorldMessage_ = null;
        }
        return helloWorldMessageBuilder_;
      }

      // repeated .test.protos.SimpleMessage simpleMessage = 3;
      private java.util.List<test.protos.TestProtos.SimpleMessage> simpleMessage_ =
        java.util.Collections.emptyList();
      private void ensureSimpleMessageIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          simpleMessage_ = new java.util.ArrayList<test.protos.TestProtos.SimpleMessage>(simpleMessage_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          test.protos.TestProtos.SimpleMessage, test.protos.TestProtos.SimpleMessage.Builder, test.protos.TestProtos.SimpleMessageOrBuilder> simpleMessageBuilder_;

      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public java.util.List<test.protos.TestProtos.SimpleMessage> getSimpleMessageList() {
        if (simpleMessageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(simpleMessage_);
        } else {
          return simpleMessageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public int getSimpleMessageCount() {
        if (simpleMessageBuilder_ == null) {
          return simpleMessage_.size();
        } else {
          return simpleMessageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public test.protos.TestProtos.SimpleMessage getSimpleMessage(int index) {
        if (simpleMessageBuilder_ == null) {
          return simpleMessage_.get(index);
        } else {
          return simpleMessageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder setSimpleMessage(
          int index, test.protos.TestProtos.SimpleMessage value) {
        if (simpleMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSimpleMessageIsMutable();
          simpleMessage_.set(index, value);
          onChanged();
        } else {
          simpleMessageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder setSimpleMessage(
          int index, test.protos.TestProtos.SimpleMessage.Builder builderForValue) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          simpleMessage_.set(index, builderForValue.build());
          onChanged();
        } else {
          simpleMessageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder addSimpleMessage(test.protos.TestProtos.SimpleMessage value) {
        if (simpleMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSimpleMessageIsMutable();
          simpleMessage_.add(value);
          onChanged();
        } else {
          simpleMessageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder addSimpleMessage(
          int index, test.protos.TestProtos.SimpleMessage value) {
        if (simpleMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSimpleMessageIsMutable();
          simpleMessage_.add(index, value);
          onChanged();
        } else {
          simpleMessageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder addSimpleMessage(
          test.protos.TestProtos.SimpleMessage.Builder builderForValue) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          simpleMessage_.add(builderForValue.build());
          onChanged();
        } else {
          simpleMessageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder addSimpleMessage(
          int index, test.protos.TestProtos.SimpleMessage.Builder builderForValue) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          simpleMessage_.add(index, builderForValue.build());
          onChanged();
        } else {
          simpleMessageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder addAllSimpleMessage(
          java.lang.Iterable<? extends test.protos.TestProtos.SimpleMessage> values) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          super.addAll(values, simpleMessage_);
          onChanged();
        } else {
          simpleMessageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder clearSimpleMessage() {
        if (simpleMessageBuilder_ == null) {
          simpleMessage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          simpleMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public Builder removeSimpleMessage(int index) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          simpleMessage_.remove(index);
          onChanged();
        } else {
          simpleMessageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public test.protos.TestProtos.SimpleMessage.Builder getSimpleMessageBuilder(
          int index) {
        return getSimpleMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public test.protos.TestProtos.SimpleMessageOrBuilder getSimpleMessageOrBuilder(
          int index) {
        if (simpleMessageBuilder_ == null) {
          return simpleMessage_.get(index);  } else {
          return simpleMessageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public java.util.List<? extends test.protos.TestProtos.SimpleMessageOrBuilder> 
           getSimpleMessageOrBuilderList() {
        if (simpleMessageBuilder_ != null) {
          return simpleMessageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(simpleMessage_);
        }
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public test.protos.TestProtos.SimpleMessage.Builder addSimpleMessageBuilder() {
        return getSimpleMessageFieldBuilder().addBuilder(
            test.protos.TestProtos.SimpleMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public test.protos.TestProtos.SimpleMessage.Builder addSimpleMessageBuilder(
          int index) {
        return getSimpleMessageFieldBuilder().addBuilder(
            index, test.protos.TestProtos.SimpleMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .test.protos.SimpleMessage simpleMessage = 3;</code>
       *
       * <pre>
       * 选填的、可重复的、嵌套的简单消息
       * </pre>
       */
      public java.util.List<test.protos.TestProtos.SimpleMessage.Builder> 
           getSimpleMessageBuilderList() {
        return getSimpleMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          test.protos.TestProtos.SimpleMessage, test.protos.TestProtos.SimpleMessage.Builder, test.protos.TestProtos.SimpleMessageOrBuilder> 
          getSimpleMessageFieldBuilder() {
        if (simpleMessageBuilder_ == null) {
          simpleMessageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              test.protos.TestProtos.SimpleMessage, test.protos.TestProtos.SimpleMessage.Builder, test.protos.TestProtos.SimpleMessageOrBuilder>(
                  simpleMessage_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          simpleMessage_ = null;
        }
        return simpleMessageBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:test.protos.ComplexMessage)
    }

    static {
      defaultInstance = new ComplexMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:test.protos.ComplexMessage)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_test_protos_HelloWorldMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_test_protos_HelloWorldMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_test_protos_SimpleMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_test_protos_SimpleMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_test_protos_ComplexMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_test_protos_ComplexMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020TestProtos.proto\022\013test.protos\"\037\n\021Hello" +
      "WorldMessage\022\n\n\002id\030\001 \002(\005\"F\n\rSimpleMessag" +
      "e\022\n\n\002id\030\001 \001(\005\022\014\n\004flag\030\002 \001(\010\022\014\n\004name\030\003 \001(" +
      "\t\022\r\n\005alias\030\004 \003(\014\"\253\001\n\016ComplexMessage\022\n\n\002i" +
      "d\030\001 \001(\005\022\037\n\004type\030\007 \001(\0162\021.test.protos.Type" +
      "\0229\n\021helloWorldMessage\030\002 \001(\0132\036.test.proto" +
      "s.HelloWorldMessage\0221\n\rsimpleMessage\030\003 \003" +
      "(\0132\032.test.protos.SimpleMessage*\'\n\004Type\022\007" +
      "\n\003ADD\020\001\022\n\n\006UPDATE\020\002\022\n\n\006DELETE\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_test_protos_HelloWorldMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_test_protos_HelloWorldMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_test_protos_HelloWorldMessage_descriptor,
              new java.lang.String[] { "Id", });
          internal_static_test_protos_SimpleMessage_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_test_protos_SimpleMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_test_protos_SimpleMessage_descriptor,
              new java.lang.String[] { "Id", "Flag", "Name", "Alias", });
          internal_static_test_protos_ComplexMessage_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_test_protos_ComplexMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_test_protos_ComplexMessage_descriptor,
              new java.lang.String[] { "Id", "Type", "HelloWorldMessage", "SimpleMessage", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
